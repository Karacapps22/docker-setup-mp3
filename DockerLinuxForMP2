Installing amazon linux and tools for mp2 in a docker container

Install docker for mac from https://docs.docker.com/desktop/mac/apple-silicon/

# load and build container
    docker run --name=<name> --platform linux/x86_64 -it --net=host -v $(pwd):$(pwd) -w $(pwd) amazonlinux /bin/bash
    
# You're now in your container

# Container prep
    $ yum install -y autoconf \
                   libtool \
                   nano \
                   git \
                   wget \
                   gcc-c++ \
                   make \
                   which \
                   pkgconfig \
                   openssl-devel \
                   procps
    $ yum clean all

    $ export WORKDIR=$(pwd)
    $ cd /root

//The instructions in between the stars are optional if you're just setting up docker and not trying to run MP3
*****************************************************************************
*** Then follow PDF for Amazon install instructions but inside your container

Path Setup
    export MY_INSTALL_DIR=$HOME/.grpc
    mkdir -p $MY_INSTALL_DIR
    export PATH="$MY_INSTALL_DIR/bin:$PATH"

Installing dependencies
    yum install -y autoconf libtool

Installing latest version of CMake
    wget -q -O cmake-linux.sh https://github.com/Kitware/CMake/releases/download/v3.19.6/cmake-3.19.6-Linux-x86_64.sh
    sh cmake-linux.sh -- --skip-license --prefix=$MY_INSTALL_DIR
    rm cmake-linux.sh

Cloning, building and installing gRPC & Protobuf
    git clone --recurse-submodules -b v1.43.0 https://github.com/grpc/grpc
    cd grpc
    mkdir -p cmake/build
    pushd cmake/build
    cmake -DgRPC_INSTALL=ON -DgRPC_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$MY_INSTALL_DIR ../..
    make
    make install
    export PKG_CONFIG_PATH=$MY_INSTALL_DIR/lib/pkgconfig/
    export PKG_CONFIG_PATH=$MY_INSTALL_DIR/lib64/pkgconfig:$PKG_CONFIG_PATH

*****************************************************************************
*** Done with PDF install instructions

After all packages are installed, change back to your working dir
    cd $WORKDIR

To save your current docker image with all packages installed

In another mac terminal, list running containers
    docker ps

Example:
  $ docker ps
  CONTAINER ID  IMAGE   COMMAND    CREATED     STATUS     PORTS   NAMES
  b3748ae618cc  ubuntu  "/bin/bash"  6 minutes ago  Up 6 minutes       bold_diffie

Save running container using ID from list above
  docker commit <container ID> <pick a new container name like mp3>

Then list saved docker images and you should see your new one saved:
  docker images

Example:
  $ docker images
  REPOSITORY  TAG    IMAGE ID    CREATED     SIZE
  mp3       latest  7f6a9bf34336  5 seconds ago  314MB
  ubuntu    latest  e784f03641c9  2 weeks ago   65.6MB

//////////////////////////////////////////////////////////////////////////////
Common docker commands

    docker commit keen_newton mp3:latest
    docker run       # Start a container
    docker ps        # List running container
    docker stop      # Stop running container

    docker images                   # Show containers you have built locally and can run
    
    docker tag containerID repository	#add name to image using image id
    example:
    docker tag 36d2a2625889 mp3     
    docker tag 36d2a2625889 mp3:v1  #add tag(version) to image
    docker rmi                      # Remove container image from your laptop

Common docker run command:
   docker run -it --net=host -v $(pwd):$(pwd) -w $(pwd) --name=mycontainer amazonlinux /bin/bash
   
   #run personal repository
    docker run --name=<name> --platform linux/x86_64 -it --net=host -v $(pwd):$(pwd) -w $(pwd) <repository> /bin/bash

    #start a different terminal in the same container
    docker exec -it <name> /bin/bash

    *** Downloads the container amazonlinix and starts it at the bash command prompt in your current dir
    *** Also names the running container mycontainer so you can see it with docker ps
